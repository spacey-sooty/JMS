{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getMatchBounds } from '../../utils';\nvar propTypes = {\n  children: PropTypes.string.isRequired,\n  highlightClassName: PropTypes.string,\n  search: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  highlightClassName: 'rbt-highlight-text'\n};\n/**\n * Stripped-down version of https://github.com/helior/react-highlighter\n *\n * Results are already filtered by the time the component is used internally so\n * we can safely ignore case and diacritical marks for the purposes of matching.\n */\n\nvar Highlighter = function Highlighter(_ref) {\n  var children = _ref.children,\n      highlightClassName = _ref.highlightClassName,\n      search = _ref.search;\n\n  if (!search || !children) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n\n  var matchCount = 0;\n  var remaining = children;\n  var highlighterChildren = [];\n\n  while (remaining) {\n    var bounds = getMatchBounds(remaining, search); // No match anywhere in the remaining string, stop.\n\n    if (!bounds) {\n      highlighterChildren.push(remaining);\n      break;\n    } // Capture the string that leads up to a match.\n\n\n    var nonMatch = remaining.slice(0, bounds.start);\n\n    if (nonMatch) {\n      highlighterChildren.push(nonMatch);\n    } // Capture the matching string.\n\n\n    var match = remaining.slice(bounds.start, bounds.end);\n    highlighterChildren.push( /*#__PURE__*/React.createElement(\"mark\", {\n      className: highlightClassName,\n      key: matchCount\n    }, match));\n    matchCount += 1; // And if there's anything left over, continue the loop.\n\n    remaining = remaining.slice(bounds.end);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, highlighterChildren);\n};\n\nHighlighter.propTypes = propTypes;\nHighlighter.defaultProps = defaultProps;\nexport default Highlighter;","map":{"version":3,"names":["PropTypes","React","getMatchBounds","propTypes","children","string","isRequired","highlightClassName","search","defaultProps","Highlighter","_ref","createElement","Fragment","matchCount","remaining","highlighterChildren","bounds","push","nonMatch","slice","start","match","end","className","key"],"sources":["/home/spacey_sooty/Documents/projects/JMS/jms-frontend/node_modules/react-bootstrap-typeahead/es/components/Highlighter/Highlighter.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getMatchBounds } from '../../utils';\nvar propTypes = {\n  children: PropTypes.string.isRequired,\n  highlightClassName: PropTypes.string,\n  search: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  highlightClassName: 'rbt-highlight-text'\n};\n\n/**\n * Stripped-down version of https://github.com/helior/react-highlighter\n *\n * Results are already filtered by the time the component is used internally so\n * we can safely ignore case and diacritical marks for the purposes of matching.\n */\nvar Highlighter = function Highlighter(_ref) {\n  var children = _ref.children,\n      highlightClassName = _ref.highlightClassName,\n      search = _ref.search;\n\n  if (!search || !children) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n\n  var matchCount = 0;\n  var remaining = children;\n  var highlighterChildren = [];\n\n  while (remaining) {\n    var bounds = getMatchBounds(remaining, search); // No match anywhere in the remaining string, stop.\n\n    if (!bounds) {\n      highlighterChildren.push(remaining);\n      break;\n    } // Capture the string that leads up to a match.\n\n\n    var nonMatch = remaining.slice(0, bounds.start);\n\n    if (nonMatch) {\n      highlighterChildren.push(nonMatch);\n    } // Capture the matching string.\n\n\n    var match = remaining.slice(bounds.start, bounds.end);\n    highlighterChildren.push( /*#__PURE__*/React.createElement(\"mark\", {\n      className: highlightClassName,\n      key: matchCount\n    }, match));\n    matchCount += 1; // And if there's anything left over, continue the loop.\n\n    remaining = remaining.slice(bounds.end);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, highlighterChildren);\n};\n\nHighlighter.propTypes = propTypes;\nHighlighter.defaultProps = defaultProps;\nexport default Highlighter;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,IAAIC,SAAS,GAAG;EACdC,QAAQ,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADb;EAEdC,kBAAkB,EAAEP,SAAS,CAACK,MAFhB;EAGdG,MAAM,EAAER,SAAS,CAACK,MAAV,CAAiBC;AAHX,CAAhB;AAKA,IAAIG,YAAY,GAAG;EACjBF,kBAAkB,EAAE;AADH,CAAnB;AAIA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIG,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;EAC3C,IAAIP,QAAQ,GAAGO,IAAI,CAACP,QAApB;EAAA,IACIG,kBAAkB,GAAGI,IAAI,CAACJ,kBAD9B;EAAA,IAEIC,MAAM,GAAGG,IAAI,CAACH,MAFlB;;EAIA,IAAI,CAACA,MAAD,IAAW,CAACJ,QAAhB,EAA0B;IACxB,OAAO,aAAaH,KAAK,CAACW,aAAN,CAAoBX,KAAK,CAACY,QAA1B,EAAoC,IAApC,EAA0CT,QAA1C,CAApB;EACD;;EAED,IAAIU,UAAU,GAAG,CAAjB;EACA,IAAIC,SAAS,GAAGX,QAAhB;EACA,IAAIY,mBAAmB,GAAG,EAA1B;;EAEA,OAAOD,SAAP,EAAkB;IAChB,IAAIE,MAAM,GAAGf,cAAc,CAACa,SAAD,EAAYP,MAAZ,CAA3B,CADgB,CACgC;;IAEhD,IAAI,CAACS,MAAL,EAAa;MACXD,mBAAmB,CAACE,IAApB,CAAyBH,SAAzB;MACA;IACD,CANe,CAMd;;;IAGF,IAAII,QAAQ,GAAGJ,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmBH,MAAM,CAACI,KAA1B,CAAf;;IAEA,IAAIF,QAAJ,EAAc;MACZH,mBAAmB,CAACE,IAApB,CAAyBC,QAAzB;IACD,CAbe,CAad;;;IAGF,IAAIG,KAAK,GAAGP,SAAS,CAACK,KAAV,CAAgBH,MAAM,CAACI,KAAvB,EAA8BJ,MAAM,CAACM,GAArC,CAAZ;IACAP,mBAAmB,CAACE,IAApB,EAA0B,aAAajB,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B;MACjEY,SAAS,EAAEjB,kBADsD;MAEjEkB,GAAG,EAAEX;IAF4D,CAA5B,EAGpCQ,KAHoC,CAAvC;IAIAR,UAAU,IAAI,CAAd,CArBgB,CAqBC;;IAEjBC,SAAS,GAAGA,SAAS,CAACK,KAAV,CAAgBH,MAAM,CAACM,GAAvB,CAAZ;EACD;;EAED,OAAO,aAAatB,KAAK,CAACW,aAAN,CAAoBX,KAAK,CAACY,QAA1B,EAAoC,IAApC,EAA0CG,mBAA1C,CAApB;AACD,CAxCD;;AA0CAN,WAAW,CAACP,SAAZ,GAAwBA,SAAxB;AACAO,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;AACA,eAAeC,WAAf"},"metadata":{},"sourceType":"module"}