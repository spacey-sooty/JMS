{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\", \"text\"];\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Highlighter from '../Highlighter';\nimport Menu from '../Menu';\nimport MenuItem from '../MenuItem';\nimport { getOptionLabel, getOptionProperty, isString } from '../../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      text = props.text,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: !!getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (getOptionProperty(option, 'customOption')) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: text\n      }, label));\n    }\n\n    if (getOptionProperty(option, 'paginationOption')) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: \"pagination-option-divider\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: // TODO: Fix how (aria-)labels are passed to `MenuItem`.\n        // `paginationText` can be a ReactNode.\n        isString(paginationText) ? paginationText : ''\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, _extends({}, menuProps, {\n    key: // Force a re-render if the text changes to ensure that menu\n    // positioning updates correctly.\n    text\n  }), options.map(renderMenuItem));\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_excluded","PropTypes","React","Highlighter","Menu","MenuItem","getOptionLabel","getOptionProperty","isString","propTypes","newSelectionPrefix","node","paginationText","renderMenuItemChildren","func","defaultProps","option","props","createElement","search","text","labelKey","TypeaheadMenu","options","menuProps","renderMenuItem","position","label","menuItemProps","disabled","className","key","Fragment","Divider","map"],"sources":["/home/spacey_sooty/Documents/projects/JMS/jms-frontend/node_modules/react-bootstrap-typeahead/es/components/TypeaheadMenu/TypeaheadMenu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\", \"text\"];\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Highlighter from '../Highlighter';\nimport Menu from '../Menu';\nimport MenuItem from '../MenuItem';\nimport { getOptionLabel, getOptionProperty, isString } from '../../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      text = props.text,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: !!getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (getOptionProperty(option, 'customOption')) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: text\n      }, label));\n    }\n\n    if (getOptionProperty(option, 'paginationOption')) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: \"pagination-option-divider\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: // TODO: Fix how (aria-)labels are passed to `MenuItem`.\n        // `paginationText` can be a ReactNode.\n        isString(paginationText) ? paginationText : ''\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, _extends({}, menuProps, {\n    key: // Force a re-render if the text changes to ensure that menu\n    // positioning updates correctly.\n    text\n  }), options.map(renderMenuItem));\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module"}